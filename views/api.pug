extends layouts/int

mixin table(x)
  table(class=x)
    thead
      tr
        th Param
        th Type
        th Description
    tbody
      tr
        td req
        td
          code Object
        td the incoming sip request object

      tr
        td opts.localSdp
        td
          code string
        td the local session description protocol to include in the SIP response


block sidebar
  nav#docs-menu
    ul.parents.page-nav
      li.active
        i.rr.down
        a(href="#srf") Srf
        nav(): ul.children(data-gumshoe="")
          li.active: a(href="#methods") Methods
          li: a(hrad="#events") Events
block content
  span.start
    img(src='/images/circle.svg')
    | API Reference
  .api-class#srf
    h2 Srf()
      .type Class
    p.description
    .sub
      .methods#methods
        h3 Methods
        .method
          h4 srf.createUAS(req, res, opts, [callback])
          p
            | create a SIP dialog, acting as a UAS (user agent server); i.e. respond to an incoming SIP INVITE with a 200 OK (or to a SUBSCRIBE request with a 202 Accepted).

          +table('')
          table(class="option-1")
            thead
              tr
                th Parameters
                th Type
                th Description
            tbody
              tr
                td.params 
                  .name req
                  //div optional
                td.description
                  .arg-type Object
                td
                  | The incoming sip request object.
              tr
                td.params 
                  .name opts.localSdp
                  div optional
                td
                  .arg-type string
                td
                  | the local session description protocol to include in the SIP response

          table(class="option-2")
            thead
              tr
                th Parameters
                th Type
                th Description
            tbody
              tr
                td.params 
                  .name req
                  //div optional
                td.description
                  .arg-type Object
                td
                  | The incoming sip request object.
              tr
                td.params 
                  .name opts.localSdp
                  div optional
                td
                  .arg-type string
                td
                  | the local session description protocol to include in the SIP response

          table(class="option-3")
            thead
              tr
                th Parameters
                th Description
            tbody
              tr
                td.params 
                  .name req
                  //div optional
                td.description
                  .arg-type Object
                  | The incoming sip request object.
              tr
                td.params 
                  .name opts.localSdp
                td
                  .arg-type string
                  | the local session description protocol to include in the SIP response


          h5 Returns:
          hr
          h4 Examples
          .card.code-box
            .card-header Return a simple SIP proxy
            .card-body
              :markdown-it
                ```js
                  const Srf = require('drachtio-srf');
                  const srf = new Srf() ;
                  const config = require('config');

                  srf.connect(config.get('drachtio.server')) ;

                  srf.invite((req, res) => {
                    srf.proxyRequest(req, ['sip.example1.com', 'sip.example2.com'], {
                      recordRoute: true,
                      followRedirects: true
                    });
                  });
                ```

      .events#events
        h3 Events
        
block scripts
  script.
    /*var links = [];
    $('.api-class').each(function (i) {
        links.push({name: this.id, links: []});
        $('.method').each(function () {
            links[i].links.push(this.id);
        });
    });
    $(function() {
        for (var i = 0; i < links.length; i++) {
          $(".page-nav").append("<li>" + cap(links[i].name) + "</li>");
          for (var j = 0; j < links[i].links.length; j++) {
              
          }
        }  
    });
    function cap(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }*/
  script.
    hljs.initHighlightingOnLoad();
